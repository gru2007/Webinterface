# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Publish Docker image

on:
  release:
    types: [published]
  workflow_dispatch: {}

jobs:
  backend:
    name: Build and push Backend image
    runs-on: ubuntu-latest
    permissions:
      contents: write # Allow actions to create release
      packages: write # Allow pushing images to GHCR
      attestations: write # To create and write attestations
      id-token: write # Additional permissions for the persistence of the attestations
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Generate image name
        run: |
          REPO_OWNER_LOWERCASE="$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')"
          echo "REPO_OWNER_LOWERCASE=$REPO_OWNER_LOWERCASE" >> "$GITHUB_ENV"
          echo "IMAGE_URL=ghcr.io/$REPO_OWNER_LOWERCASE/backend" >> "$GITHUB_ENV"

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env. IMAGE_URL }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{raw}}
            type=semver,pattern=v{{major}}
            type=ref,event=branch

      - name: Login to GitHub Package Registry
        uses: docker/login-action@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5.3.0
        with:
          context: Backend/
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          provenance: false
          
      - name: Attest pushed image
        uses: actions/attest-build-provenance@v1
        id: attest
        if: ${{ github.event_name != 'pull_request' }}
        with:
          subject-name: ${{ env.IMAGE_URL }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: false
  frontend:
    name: Build and push Frontend image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        if: false
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
          platforms: linux/amd64,linux/arm64

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ree6/frontend

      - name: Build and push Docker image
        uses: docker/build-push-action@v5.3.0
        with:
          platforms: linux/amd64,linux/arm64
          context: Frontend/docker
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

